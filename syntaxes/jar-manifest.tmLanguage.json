{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Jar Manifest",
  "scopeName": "source.jar-manifest",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#substitution"
    },
    {
      "include": "#directives"
    }
  ],
  "repository": {
    "comment": {
      "match": "(?<comment>#\\s.*)$",
      "name": "comment.line.jar-manifest"
    },
    "substitution": {
      "match": "@[\\w]*@",
      "name": "variable.other"
    },
    "directives": {
      "patterns": [
        {
          "match": "(?<define>#define\\s+)(?<name>\\w+)(?<value>.*)$",
          "name": "keyword.control.directive.jar-manifest",
          "captures": {
            "1": {
              "name": "keyword.control.directive.jar-manifest"
            },
            "2": {
              "name": "entity.name.function.jar-manifest"
            },
            "3": {
              "name": "string.unquoted.jar-manifest"
            }
          }
        },
        {
          "match": "(?<undef>#undef\\s+)(?<name>\\w+)",
          "name": "keyword.control.directive.jar-manifest",
          "captures": {
            "1": {
              "name": "keyword.control.directive.jar-manifest"
            },
            "2": {
              "name": "entity.name.function.jar-manifest"
            }
          }
        },
        {
          "match": "(?<ifndef>#ifndef\\s+)(?<name>\\w+)",
          "name": "keyword.control.directive.jar-manifest",
          "captures": {
            "1": {
              "name": "keyword.control.directive.conditional.jar-manifest"
            },
            "2": {
              "name": "entity.name.function.jar-manifest"
            }
          }
        },
        {
          "match": "(?<ifdef>#ifdef\\s+)(?<name>\\w+)",
          "name": "keyword.control.directive.jar-manifest",
          "captures": {
            "1": {
              "name": "keyword.control.directive.conditional.jar-manifest"
            },
            "2": {
              "name": "entity.name.function.jar-manifest"
            }
          }
        },
        {
          "match": "(?<elifdef>#elifdef\\s+)(?<name>\\w+)",
          "name": "keyword.control.directive.jar-manifest",
          "captures": {
            "1": {
              "name": "keyword.control.directive.conditional.jar-manifest"
            },
            "2": {
              "name": "entity.name.function.jar-manifest"
            }
          }
        },
        {
          "match": "(?<elifndef>#elifndef\\s+)(?<name>\\w+)",
          "name": "keyword.control.directive.jar-manifest",
          "captures": {
            "1": {
              "name": "keyword.control.directive.conditional.jar-manifest"
            },
            "2": {
              "name": "entity.name.function.jar-manifest"
            }
          }
        },
        {
          "match": "(?<if>#if\\s+)(?<name>.+)$",
          "name": "keyword.control.directive.conditional.jar-manifest",
          "captures": {
            "1": {
              "name": "keyword.control.directive.conditional.jar-manifest"
            },
            "2": {
              "patterns": [{ "include": "#expressions" }]
            }
          }
        },
        {
          "match": "(?<elif>#elif\\s+)(?<name>.+)$",
          "name": "keyword.control.directive.conditional.jar-manifest",
          "captures": {
            "1": {
              "name": "keyword.control.directive.conditional.jar-manifest"
            },
            "2": {
              "patterns": [{ "include": "#expressions" }]
            }
          }
        },
        {
          "match": "(?<include>#include\\s+)(?<name>.+)$",
          "name": "keyword.control.directive.jar-manifest",
          "captures": {
            "1": {
              "name": "keyword.control.directive.jar-manifest"
            },
            "2": {
              "name": "string.unquoted.jar-manifest"
            }
          }
        },
        {
          "match": "(?<includesubst>#includesubst\\s+)(?<name>.+)$",
          "name": "keyword.control.directive.jar-manifest",
          "captures": {
            "1": {
              "name": "keyword.control.directive.jar-manifest"
            },
            "2": {
              "name": "string.unquoted.jar-manifest",
              "patterns": [{ "include": "#substitution" }]
            }
          }
        },
        {
          "match": "(?<expand>#expand\\s+)(?<name>.+)$",
          "name": "keyword.control.directive.jar-manifest",
          "captures": {
            "1": {
              "name": "keyword.control.directive.jar-manifest"
            },
            "2": {
              "name": "string.unquoted.jar-manifest",
              "patterns": [
                {
                  "match": "__\\w+__",
                  "name": "variable.other"
                }
              ]
            }
          }
        },
        {
          "match": "(#(un)?filter\\s)(?<name>.+)$",
          "name": "keyword.control.directive.jar-manifest",
          "captures": {
            "2": {
              "name": "keyword.control.directive.jar-manifest"
            },
            "3": {
              "name": "string.unquoted.jar-manifest"
            }
          }
        },
        {
          "match": "(?<literal>#literal\\s+)(?<name>.+)$",
          "name": "keyword.control.directive.jar-manifest",
          "captures": {
            "1": {
              "name": "keyword.control.directive.jar-manifest"
            },
            "2": {
              "name": "string.unquoted.jar-manifest"
            }
          }
        },
        {
          "match": "(?<error>#error\\s+)(?<name>.+)$",
          "name": "keyword.control.directive.jar-manifest",
          "captures": {
            "1": {
              "name": "keyword.control.directive.jar-manifest"
            },
            "2": {
              "name": "string.unquoted.jar-manifest"
            }
          }
        },
        {
          "match": "(?<else>#else)|(?<endif>#endif)",
          "name": "keyword.control.directive.conditional.jar-manifest"
        },
        {
          "match": "#\\w.*$",
          "name": "keyword.control.directive.jar-manifest"
        }
      ]
    },
    "expressions": {
      "patterns": [
        {
          "match": "\\b(defined)\\b",
          "name": "keyword.control.directive.conditional.jar-manifest"
        },
        {
          "match": "[a-zA-Z_$][\\w$]*",
          "name": "variable.other"
        },
        {
          "match": "==|!=|&&|!",
          "name": "keyword.operator.jar-manifest"
        }
      ]
    }
  }
}
